#https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CI_Multi

on:
  push:
    branches-ignore:
      - main
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

env:
  BUILD_TYPE: Release

jobs:
  build-project:
    runs-on: ${{ matrix.os }}

    #define Strategy containing the os matrix
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            badge_gist_id: aebe8917416c55e1318cdc4a11493dbd
          - os: windows-latest
            badge_gist_id: ab416e989b92e560371af426493b9fa6


    steps:
      # - name: print gist id
      #   run: 'echo ${{matrix.badge_gist_id}}'

      # - name: print os
      #   run: 'echo ${{matrix.os}}'

      - name: Checkout Repository
        uses: actions/checkout@v4 #https://github.com/actions/checkout

      #CMake is already part of the runner :) (v3.30.5)
      # - name: Install CMake
      #   uses: jwlawson/actions-setup-cmake@v2 #https://github.com/marketplace/actions/actions-setup-cmake
      #   with:
      #     cmake-version: '3.20.x'

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        id: build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Config On Fail
        if: always() && (steps.build.outcome == 'failure')
        run: |
          echo "badge_message=failed" >> $GITHUB_ENV
          echo "badge_color=red" >> $GITHUB_ENV

      - name: Config On Success
        if: always() && (steps.build.outcome == 'success')
        run: |
          echo "badge_message=passing" >> $GITHUB_ENV
          echo "badge_color=brightgreen" >> $GITHUB_ENV

      # - name: Create Badge (succes)
      #   if: always()
      #   uses: Tomiha/gist-write-action@v1.0.0
      #   with:
      #     GITHUB_TOKEN: ${{secrets.GIST_BADGE_TOKEN}}
      #     gist_id: ${{matrix.badge_gist_id}}
      #     file_name: badge.json
      #     content: '{ "schemaVersion": 1, "label": "${{matrix.os}}", "message": "${{env.badge_message}}", "color": "${{env.badge_color}}" }'

  create_badge:
    needs: build-project
    runs-on: ubuntu-latest
    steps:
      - name: Echo Variables
        run: 'echo ${{env.badge_message}}'